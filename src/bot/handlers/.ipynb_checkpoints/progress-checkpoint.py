import re
from aiogram import Router, types

from ...db.crud import record_progress, get_daily_progress
from ..keyboards import main_menu

import logging
logger = logging.getLogger(__name__)


router = Router()

@router.message(lambda message: bool(re.search(r"(\d+)\s*ml", message.text)))
async def log_water(message: types.Message):
    logger.debug(f"[log_water] text={message.text!r}")
    """
    –õ–æ–≥–∏—Ä—É–µ—Ç –≤—ã–ø–∏—Ç—ã–π –æ–±—ä—ë–º –≤–æ–¥—ã.
    –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –≥–¥–µ –µ—Å—Ç—å —á–∏—Å–ª–æ+ml.
    """
    match = re.search(r"(\d+)\s*ml", message.text)
    amount = int(match.group(1))
    await record_progress(message.chat.id, amount)
    await message.answer(
        f"Nice! You logged {amount} ml üíß\nKeep it up to stay hydrated üí™",
        reply_markup=main_menu()
    )

@router.message(lambda message: message.text == "üìä Check Progress")
async def show_progress(message: types.Message):
    logger.debug(f"[show_progress] text={message.text!r}")
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞ —Å–µ–≥–æ–¥–Ω—è.
    """
    details, total = await get_daily_progress(message.chat.id)
    if details:
        await message.answer(
            f"üìä Today's progress:\n{details}\n\nTotal: {total} ml",
            reply_markup=main_menu()
        )
    else:
        await message.answer(
            "‚ùå No entries yet today. Start drinking!",
            reply_markup=main_menu()
        )
